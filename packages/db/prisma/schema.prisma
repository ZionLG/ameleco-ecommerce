generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["prisma"]
}

model Profile { 
  id     String  @id @default(dbgenerated("(uuid_generate_v4())")) @db.Uuid
  firstName   String @map("first_name")
  lastName   String @map("last_name")
  userGroup  Groups @map("user_group") @default(VISITOR)
  email  String
  phone String @unique
  occupation Occupation
  purchaseFrequency PurchaseFrequency @map("purchase_frequency")
  userId String  @db.Uuid @map("user_id") @unique
  additionalInformation String? @map("additional_information")
  businessType BusinessType? @map("business_type")
  companyName String? @map("company_name")
  cart Cart?

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("user_profile")
  @@schema("prisma")
}

model Pricing {
  id     String  @id @default(dbgenerated("(uuid_generate_v4())")) @db.Uuid
  product Product?
  visitor Float
  customer Float
  frequent Float
  contractor Float
  professional Float
  vip Float
  @@map("pricing")
  @@schema("prisma")
}

model Product {
  id     String  @id @default(dbgenerated("(uuid_generate_v4())")) @db.Uuid
  name        String @unique
  description String?
  price       Pricing @relation(fields: [priceId], references: [id], onDelete: Cascade) 
  priceId     String @unique @map("price_id") @db.Uuid
  stock       Int
  imageUrl    String @map("image_url")
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId String @db.Uuid @map("category_id")
  cartItems CartItem[]


  @@map("product")
  @@schema("prisma")
}

model Category {
  id     String  @id @default(dbgenerated("(uuid_generate_v4())")) @db.Uuid
  name        String @unique
  products Product[]

  @@map("category")
  @@schema("prisma")
}


model Cart {
  id     String  @id @default(dbgenerated("(uuid_generate_v4())")) @db.Uuid
  userId     String @db.Uuid @map("user_id") @unique
  user       Profile     @relation(fields: [userId], references: [userId])
  items      CartItem[]
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@schema("prisma")
  @@map("cart")

}


model CartItem {
  id     String  @id @default(dbgenerated("(uuid_generate_v4())")) @db.Uuid
  cartId      String @map("cart_id") @db.Uuid
  cart        Cart     @relation(fields: [cartId], references: [id])
  productId   String @db.Uuid @map("product_id")
  product     Product  @relation(fields: [productId], references: [id])
  quantity    Int
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  

  @@map("cart_item")
  @@schema("prisma")
}


enum BusinessType {
  RESIDENTIAL_RENOVATION
  RESIDENTIAL_NEW_CONSTRUCTION
  COMMERCIAL_RENOVATION
  COMMERCIAL_NEW_CONSTRUCTION
  @@schema("prisma")
  @@map("business_type")
}
enum PurchaseFrequency {
  RARELY
  MONTHLY
  BIWEEKLY
  WEEKLY
  DAILY
  PROJECT_BASED
  @@schema("prisma")
  @@map("purchase_frequency")
}

enum Occupation {
  HOME_OWNER
  HANDY_MAN
  RENOVATION_CONTRACTOR
  BUILDER
  GENERAL_CONTRACTOR
  ELECTRICIAN
  ELECTRICAL_CONTRACTOR
  OTHER
  @@schema("prisma")
  @@map("occupation")
}

enum Groups {
  VISITOR
  CUSTOMER
  FREQUENT
  CONTRACTOR
  PROFESSIONAL
  VIP
  @@schema("prisma")
  @@map("groups")

}
